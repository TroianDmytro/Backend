# docker-stack.yml
version: '3.8'

services:
  nestjs-backend:
    image: your-registry.com/nestjs-backend:${VERSION:-latest}
    ports:
      - "8000:8000"
    environment:
      # Основные настройки
      - NODE_ENV=production
      - PORT=8000
      - APP_URL=${APP_URL}
      
      # MongoDB (внешняя база данных)
      - MONGODB_URI=${MONGODB_URI}
      
      # Email настройки
      - EMAIL_HOST=${EMAIL_HOST}
      - EMAIL_PORT=${EMAIL_PORT}
      - EMAIL_USER=${EMAIL_USER}
      - EMAIL_FROM=${EMAIL_FROM}
      
      # CORS
      - CORS_ORIGINS=${CORS_ORIGINS}
    
    # Docker Secrets
    secrets:
      - source: jwt_secret
        target: jwt_secret
        mode: 0400
      - source: email_password
        target: email_password
        mode: 0400
    
    # Сеть
    networks:
      - nestjs-network
    
    # Настройки развертывания
    deploy:
      replicas: 3
      placement:
        constraints:
          - node.role == worker
      update_config:
        parallelism: 1
        delay: 10s
        failure_action: rollback
        monitor: 30s
        max_failure_ratio: 0.3
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
      resources:
        limits:
          cpus: '1'
          memory: 512M
        reservations:
          cpus: '0.5'
          memory: 256M
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.backend.rule=Host(`api.your-domain.com`)"
        - "traefik.http.services.backend.loadbalancer.server.port=8000"

# Сети
networks:
  nestjs-network:
    driver: overlay
    attachable: true

# Секреты (внешние)
secrets:
  jwt_secret:
    external: true
    name: nestjs_jwt_secret
  email_password:
    external: true
    name: nestjs_email_password