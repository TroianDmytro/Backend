// src/email/email.service.ts
import { Injectable, Logger } from '@nestjs/common';
import * as nodemailer from 'nodemailer';
import { ConfigService } from '@nestjs/config';

@Injectable()
export class EmailService {

    private readonly logger = new Logger(EmailService.name);
    private transporter: nodemailer.Transporter;
    private emailHost;
    private emailPort;
    private emailSecureBoolean;
    private emailUser;
    private emailPassword;
    private app_url;
    constructor(private configService: ConfigService) {
        this.createTransporter();
        this.app_url = this.configService.get<string>('app.url');
    }

    private createTransporter() {
        try {

            this.emailHost = this.configService.get<string>('email.host');
            this.emailPort = this.configService.get<string>('email.port');
            this.emailUser = this.configService.get<string>('email.user');
            this.emailPassword = this.configService.get<string>('email.password');
            this.emailSecureBoolean = this.configService.get<string>('email.secure') === 'true';

            // –î–µ—Ç–∞–ª—å–Ω–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏
            this.logger.log(`üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∞ SMTP: ${this.emailHost}:${this.emailPort}`);
            this.logger.log(`üìß Email –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: ${this.emailUser ? '–û–ö' : '–ù–ï–¢'}`);
            this.logger.log(`üîë Email –ø–∞—Ä–æ–ª—å: ${this.emailPassword ? '–û–ö' : '–ù–ï–¢'}`);
            this.logger.log(`üîí Secure: ${this.emailSecureBoolean}`);

            if (!this.emailHost || !this.emailPort || !this.emailUser || !this.emailPassword) {
                this.logger.warn('‚ö†Ô∏è  –ù–µ –≤—Å–µ email –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã');
                this.logger.warn(`HOST: ${this.emailHost ? '‚úÖ' : '‚ùå'}, PORT: ${this.emailPort ? '‚úÖ' : '‚ùå'}, USER: ${this.emailUser ? '‚úÖ' : '‚ùå'}, PASS: ${this.emailPassword ? '‚úÖ' : '‚ùå'}`);
                return;
            }

            this.transporter = nodemailer.createTransport({
                host: this.emailHost,
                port: parseInt(this.emailPort),
                secure: this.emailSecureBoolean, // true –¥–ª—è 465, false –¥–ª—è –¥—Ä—É–≥–∏—Ö –ø–æ—Ä—Ç–æ–≤
                auth: {
                    user: this.emailUser,
                    pass: this.emailPassword,
                },
                tls: {
                    rejectUnauthorized: false, // –î–ª—è Gmail
                },
            });

            // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ
            this.verifyConnection();
        } catch (error) {
            this.logger.error('‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è SMTP —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞:', error);
        }
    }

    private async verifyConnection() {
        try {
            if (!this.transporter) {
                this.logger.error('‚ùå –¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç –Ω–µ —Å–æ–∑–¥–∞–Ω');
                return;
            }

            await this.transporter.verify();
            this.logger.log('‚úÖ SMTP —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ');
        } catch (error) {
            this.logger.error(`‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ SMTP —Å–µ—Ä–≤–µ—Ä—É: ${error.message}`);
        }
    }

    /**
     * –û—Ç–ø—Ä–∞–≤–∫–∞ 6-–∑–Ω–∞—á–Ω–æ–≥–æ –∫–æ–¥–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –Ω–∞ email
     */
    async sendVerificationCode(email: string, code: string): Promise<void> {
        const subject = '–ö–æ–¥ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏';
        const html = `
            <h2>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –Ω–∞ –Ω–∞—à—É –æ–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω—É—é –ø–ª–∞—Ç—Ñ–æ—Ä–º—É!</h2>
            <p>–í—ã –Ω–∞—á–∞–ª–∏ –ø—Ä–æ—Ü–µ—Å—Å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –Ω–∞ –Ω–∞—à–µ–π –ø–ª–∞—Ç—Ñ–æ—Ä–º–µ.</p>
            <p>–í–∞—à –∫–æ–¥ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è:</p>
            <div style="background-color: #f8f9fa; padding: 20px; border-radius: 8px; text-align: center; margin: 20px 0;">
                <h1 style="font-family: monospace; font-size: 36px; color: #007bff; letter-spacing: 5px; margin: 0;">
                    ${code}
                </h1>
            </div>
            <p>–í–≤–µ–¥–∏—Ç–µ —ç—Ç–æ—Ç –∫–æ–¥ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è.</p>
            <p><strong>–ö–æ–¥ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª–µ–Ω –≤ —Ç–µ—á–µ–Ω–∏–µ 15 –º–∏–Ω—É—Ç.</strong></p>
            <p>–ï—Å–ª–∏ –≤—ã –Ω–µ —Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª–∏—Å—å –Ω–∞ –Ω–∞—à–µ–π –ø–ª–∞—Ç—Ñ–æ—Ä–º–µ, –ø—Ä–æ—Å—Ç–æ –ø—Ä–æ–∏–≥–Ω–æ—Ä–∏—Ä—É–π—Ç–µ —ç—Ç–æ –ø–∏—Å—å–º–æ.</p>
            <hr style="margin: 30px 0; border: none; border-top: 1px solid #eee;">
            <p style="color: #666; font-size: 12px;">
                –≠—Ç–æ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –ø–∏—Å—å–º–æ, –Ω–µ –æ—Ç–≤–µ—á–∞–π—Ç–µ –Ω–∞ –Ω–µ–≥–æ.
            </p>
        `;

        await this.sendEmail(email, subject, html);
    }

    /**
     * –û—Ç–ø—Ä–∞–≤–∫–∞ –ª–æ–≥–∏–Ω–∞ –∏ –ø–∞—Ä–æ–ª—è –ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–π —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
     */
    async sendLoginCredentials(email: string, login: string, password: string, name?: string): Promise<void> {
        const subject = '–í–∞—à–∏ —É—á–µ—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –≤—Ö–æ–¥–∞';
        const html = `
            <h2>–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!</h2>
            <p>–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ${name ? `, ${name}` : ''}!</p>
            <p>–í–∞—à–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –Ω–∞ –æ–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω–æ–π –ø–ª–∞—Ç—Ñ–æ—Ä–º–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∞.</p>
            
            <div style="background-color: #e8f5e8; padding: 20px; border-radius: 8px; border-left: 4px solid #28a745; margin: 20px 0;">
                <h3 style="margin-top: 0; color: #28a745;">–í–∞—à–∏ —É—á–µ—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ:</h3>
                <p style="margin: 10px 0;"><strong>–õ–æ–≥–∏–Ω:</strong> 
                    <span style="font-family: monospace; background-color: #f8f9fa; padding: 2px 6px; border-radius: 4px; font-size: 16px;">
                        ${login}
                    </span>
                </p>
                <p style="margin: 10px 0;"><strong>–ü–∞—Ä–æ–ª—å:</strong> 
                    <span style="font-family: monospace; background-color: #f8f9fa; padding: 2px 6px; border-radius: 4px; font-size: 16px;">
                        ${password}
                    </span>
                </p>
            </div>

            <div style="background-color: #fff3cd; padding: 15px; border-radius: 8px; border-left: 4px solid #ffc107; margin: 20px 0;">
                <h4 style="margin-top: 0; color: #856404;">üîí –í–∞–∂–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏:</h4>
                <ul style="color: #856404; margin: 10px 0 0 20px;">
                    <li>–°–æ—Ö—Ä–∞–Ω–∏—Ç–µ —ç—Ç–∏ –¥–∞–Ω–Ω—ã–µ –≤ –Ω–∞–¥–µ–∂–Ω–æ–º –º–µ—Å—Ç–µ</li>
                    <li>–ù–µ –ø–µ—Ä–µ–¥–∞–≤–∞–π—Ç–µ –ø–∞—Ä–æ–ª—å —Ç—Ä–µ—Ç—å–∏–º –ª–∏—Ü–∞–º</li>
                    <li>–†–µ–∫–æ–º–µ–Ω–¥—É–µ–º –∏–∑–º–µ–Ω–∏—Ç—å –ø–∞—Ä–æ–ª—å –ø–æ—Å–ª–µ –ø–µ—Ä–≤–æ–≥–æ –≤—Ö–æ–¥–∞</li>
                    <li>–ü–∞—Ä–æ–ª—å —Å–æ–¥–µ—Ä–∂–∏—Ç: –∑–∞–≥–ª–∞–≤–Ω—ã–µ –±—É–∫–≤—ã, —Ü–∏—Ñ—Ä—ã –∏ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–∏–º–≤–æ–ª—ã</li>
                </ul>
            </div>

            <div style="text-align: center; margin: 30px 0;">
                <a href="${this.app_url || 'http://localhost:3000'}/login" 
                   style="background-color: #007bff; color: white; padding: 12px 24px; text-decoration: none; border-radius: 5px; font-weight: bold;">
                    –í–æ–π—Ç–∏ –≤ —Å–∏—Å—Ç–µ–º—É
                </a>
            </div>

            <p>–¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –≤–æ–π—Ç–∏ –≤ —Å–∏—Å—Ç–µ–º—É, –∏—Å–ø–æ–ª—å–∑—É—è —É–∫–∞–∑–∞–Ω–Ω—ã–µ –≤—ã—à–µ —É—á–µ—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ.</p>
            <p>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –Ω–∞—à—É –æ–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω—É—é –ø–ª–∞—Ç—Ñ–æ—Ä–º—É! üéì</p>
            
            <hr style="margin: 30px 0; border: none; border-top: 1px solid #eee;">
            <p style="color: #666; font-size: 12px;">
                –≠—Ç–æ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –ø–∏—Å—å–º–æ, –Ω–µ –æ—Ç–≤–µ—á–∞–π—Ç–µ –Ω–∞ –Ω–µ–≥–æ.<br>
                –ï—Å–ª–∏ —É –≤–∞—Å –≤–æ–∑–Ω–∏–∫–ª–∏ –ø—Ä–æ–±–ª–µ–º—ã —Å–æ –≤—Ö–æ–¥–æ–º, –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ —Å–ª—É–∂–±—É –ø–æ–¥–¥–µ—Ä–∂–∫–∏.
            </p>
        `;

        await this.sendEmail(email, subject, html);
    }

    /**
     * –û—Ç–ø—Ä–∞–≤–∫–∞ –ø–∏—Å—å–º–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è email (—Å—Ç–∞—Ä—ã–π –º–µ—Ç–æ–¥ –¥–ª—è –æ–±—Ä–∞—Ç–Ω–æ–π —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏)
     */
    async sendVerificationEmail(email: string, verificationUrl: string, name?: string): Promise<void> {
        const subject = '–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏';
        const html = `
            <h2>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å${name ? `, ${name}` : ''}!</h2>
            <p>–°–ø–∞—Å–∏–±–æ –∑–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é –Ω–∞ –Ω–∞—à–µ–π –æ–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω–æ–π –ø–ª–∞—Ç—Ñ–æ—Ä–º–µ.</p>
            <p>–î–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –≤–∞—à–µ–≥–æ email –∞–¥—Ä–µ—Å–∞, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–µ—Ä–µ–π–¥–∏—Ç–µ –ø–æ —Å—Å—ã–ª–∫–µ:</p>
            <a href="${verificationUrl}" style="background-color: #007bff; color: white; padding: 10px 20px; text-decoration: none; border-radius: 5px;">
                –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å email
            </a>
            <p>–ï—Å–ª–∏ –∫–Ω–æ–ø–∫–∞ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç, —Å–∫–æ–ø–∏—Ä—É–π—Ç–µ –∏ –≤—Å—Ç–∞–≤—å—Ç–µ —ç—Ç—É —Å—Å—ã–ª–∫—É –≤ –±—Ä–∞—É–∑–µ—Ä:</p>
            <p>${verificationUrl}</p>
            <p>–°—Å—ã–ª–∫–∞ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–∞ –≤ —Ç–µ—á–µ–Ω–∏–µ 24 —á–∞—Å–æ–≤.</p>
        `;

        await this.sendEmail(email, subject, html);
    }

    /**
     * –û—Ç–ø—Ä–∞–≤–∫–∞ –ø–∏—Å—å–º–∞ —Å –∫–æ–¥–æ–º –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –ø–∞—Ä–æ–ª—è
     */
    async sendPasswordResetCode(email: string, resetCode: string, name?: string): Promise<void> {
        const subject = '–í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–∞—Ä–æ–ª—è';
        const html = `
            <h2>–í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–∞—Ä–æ–ª—è</h2>
            <p>–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ${name ? `, ${name}` : ''}!</p>
            <p>–í—ã –∑–∞–ø—Ä–æ—Å–∏–ª–∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–∞—Ä–æ–ª—è –¥–ª—è –≤–∞—à–µ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞.</p>
            <p>–í–∞—à –∫–æ–¥ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è:</p>
            <h3 style="background-color: #f8f9fa; padding: 15px; border-radius: 5px; font-family: monospace; letter-spacing: 2px;">
                ${resetCode}
            </h3>
            <p>–í–≤–µ–¥–∏—Ç–µ —ç—Ç–æ—Ç –∫–æ–¥ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –ø–∞—Ä–æ–ª—è.</p>
            <p>–ö–æ–¥ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª–µ–Ω –≤ —Ç–µ—á–µ–Ω–∏–µ 15 –º–∏–Ω—É—Ç.</p>
            <p>–ï—Å–ª–∏ –≤—ã –Ω–µ –∑–∞–ø—Ä–∞—à–∏–≤–∞–ª–∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–∞—Ä–æ–ª—è, –ø—Ä–æ—Å—Ç–æ –ø—Ä–æ–∏–≥–Ω–æ—Ä–∏—Ä—É–π—Ç–µ —ç—Ç–æ –ø–∏—Å—å–º–æ.</p>
        `;

        await this.sendEmail(email, subject, html);
    }

    /**
     * –û—Ç–ø—Ä–∞–≤–∫–∞ –∫–æ–¥–∞ —Å–±—Ä–æ—Å–∞ –ø–∞—Ä–æ–ª—è (—Å–∏–Ω–æ–Ω–∏–º –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏)
     */
    async sendResetPasswordCode(email: string, resetCode: string, name?: string): Promise<void> {
        return this.sendPasswordResetCode(email, resetCode, name);
    }

    /**
     * –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± –æ–¥–æ–±—Ä–µ–Ω–∏–∏/–æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–∏ –∑–∞—è–≤–∫–∏ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è
     */
    async sendTeacherApprovalNotification(
        email: string,
        name: string,
        status: 'approved' | 'rejected',
        reason?: string
    ): Promise<void> {
        const isApproved = status === 'approved';
        const subject = isApproved ? '–ó–∞—è–≤–∫–∞ –æ–¥–æ–±—Ä–µ–Ω–∞!' : '–ó–∞—è–≤–∫–∞ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞';

        let html = `<h2>–°—Ç–∞—Ç—É—Å –≤–∞—à–µ–π –∑–∞—è–≤–∫–∏ –Ω–∞ –ø—Ä–µ–ø–æ–¥–∞–≤–∞–Ω–∏–µ</h2>`;
        html += `<p>–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, ${name}!</p>`;

        if (isApproved) {
            html += `
                <p style="color: #28a745;">üéâ –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –í–∞—à–∞ –∑–∞—è–≤–∫–∞ –Ω–∞ –ø—Ä–µ–ø–æ–¥–∞–≤–∞–Ω–∏–µ –±—ã–ª–∞ –æ–¥–æ–±—Ä–µ–Ω–∞.</p>
                <p>–¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ:</p>
                <ul>
                    <li>–°–æ–∑–¥–∞–≤–∞—Ç—å –∫—É—Ä—Å—ã</li>
                    <li>–ó–∞–≥—Ä—É–∂–∞—Ç—å –¥–æ–º–∞—à–Ω–∏–µ –∑–∞–¥–∞–Ω–∏—è</li>
                    <li>–ü—Ä–æ–≤–µ—Ä—è—Ç—å —Ä–∞–±–æ—Ç—ã —Å—Ç—É–¥–µ–Ω—Ç–æ–≤</li>
                    <li>–£–ø—Ä–∞–≤–ª—è—Ç—å —Å–≤–æ–∏–º–∏ –∫—É—Ä—Å–∞–º–∏</li>
                </ul>
                <p>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∫–æ–º–∞–Ω–¥—É –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–π!</p>
            `;
        } else {
            html += `
                <p style="color: #dc3545;">–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –≤–∞—à–∞ –∑–∞—è–≤–∫–∞ –Ω–∞ –ø—Ä–µ–ø–æ–¥–∞–≤–∞–Ω–∏–µ –±—ã–ª–∞ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞.</p>
                ${reason ? `<p><strong>–ü—Ä–∏—á–∏–Ω–∞:</strong> ${reason}</p>` : ''}
                <p>–í—ã –º–æ–∂–µ—Ç–µ –ø–æ–¥–∞—Ç—å –Ω–æ–≤—É—é –∑–∞—è–≤–∫—É –ø–æ—Å–ª–µ —É—Å—Ç—Ä–∞–Ω–µ–Ω–∏—è —É–∫–∞–∑–∞–Ω–Ω—ã—Ö –∑–∞–º–µ—á–∞–Ω–∏–π.</p>
            `;
        }

        await this.sendEmail(email, subject, html);
    }

    /**
     * –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –±–ª–æ–∫–∏—Ä–æ–≤–∫–µ/—Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–µ
     */
    async sendBlockNotification(
        email: string,
        name: string,
        isBlocked: boolean,
        reason?: string
    ): Promise<void> {
        const subject = isBlocked ? '–ê–∫–∫–∞—É–Ω—Ç –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω' : '–ê–∫–∫–∞—É–Ω—Ç —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω';

        let html = `<h2>–ò–∑–º–µ–Ω–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –∞–∫–∫–∞—É–Ω—Ç–∞</h2>`;
        html += `<p>–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, ${name}!</p>`;

        if (isBlocked) {
            html += `
                <p style="color: #dc3545;">–í–∞—à –∞–∫–∫–∞—É–Ω—Ç –±—ã–ª –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º.</p>
                ${reason ? `<p><strong>–ü—Ä–∏—á–∏–Ω–∞:</strong> ${reason}</p>` : ''}
                <p>–î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.</p>
            `;
        } else {
            html += `
                <p style="color: #28a745;">–í–∞—à –∞–∫–∫–∞—É–Ω—Ç –±—ã–ª —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω.</p>
                <p>–¢–µ–ø–µ—Ä—å –≤—ã —Å–Ω–æ–≤–∞ –º–æ–∂–µ—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –≤—Å–µ–º–∏ —Ñ—É–Ω–∫—Ü–∏—è–º–∏ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã.</p>
            `;
        }

        await this.sendEmail(email, subject, html);
    }

    /**
     * –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± –∏–∑–º–µ–Ω–µ–Ω–∏–∏ email
     */
    async sendEmailChangeNotification(
        oldEmail: string,
        newEmail: string,
        verificationUrl: string
    ): Promise<void> {
        // –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –Ω–∞ —Å—Ç–∞—Ä—ã–π email
        const oldEmailSubject = 'Email –∞–¥—Ä–µ—Å –∏–∑–º–µ–Ω–µ–Ω';
        const oldEmailHtml = `
            <h2>–ò–∑–º–µ–Ω–µ–Ω–∏–µ email –∞–¥—Ä–µ—Å–∞</h2>
            <p>–í–∞—à email –∞–¥—Ä–µ—Å –±—ã–ª –∏–∑–º–µ–Ω–µ–Ω —Å ${oldEmail} –Ω–∞ ${newEmail}.</p>
            <p>–ï—Å–ª–∏ —ç—Ç–æ –±—ã–ª–∏ –Ω–µ –≤—ã, –Ω–µ–º–µ–¥–ª–µ–Ω–Ω–æ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.</p>
        `;

        // –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –Ω–∞ –Ω–æ–≤—ã–π email —Å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ–º
        const newEmailSubject = '–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –Ω–æ–≤—ã–π email –∞–¥—Ä–µ—Å';
        const newEmailHtml = `
            <h2>–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –Ω–æ–≤–æ–≥–æ email –∞–¥—Ä–µ—Å–∞</h2>
            <p>–í–∞—à email –∞–¥—Ä–µ—Å –±—ã–ª –∏–∑–º–µ–Ω–µ–Ω –Ω–∞ ${newEmail}.</p>
            <p>–î–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –Ω–æ–≤–æ–≥–æ –∞–¥—Ä–µ—Å–∞ –ø–µ—Ä–µ–π–¥–∏—Ç–µ –ø–æ —Å—Å—ã–ª–∫–µ:</p>
            <a href="${verificationUrl}" style="background-color: #007bff; color: white; padding: 10px 20px; text-decoration: none; border-radius: 5px;">
                –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –Ω–æ–≤—ã–π email
            </a>
        `;

        await Promise.all([
            this.sendEmail(oldEmail, oldEmailSubject, oldEmailHtml),
            this.sendEmail(newEmail, newEmailSubject, newEmailHtml)
        ]);
    }

    /**
     * –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –ø–æ–¥–ø–∏—Å–∫–∞—Ö
     */
    async sendSubscriptionActivationNotification(email: string, name: string): Promise<void> {
        const subject = '–ü–æ–¥–ø–∏—Å–∫–∞ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞';
        const html = `
            <h2>–ü–æ–¥–ø–∏—Å–∫–∞ —É—Å–ø–µ—à–Ω–æ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞!</h2>
            <p>–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, ${name}!</p>
            <p>–í–∞—à–∞ –ø–æ–¥–ø–∏—Å–∫–∞ –±—ã–ª–∞ —É—Å–ø–µ—à–Ω–æ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞.</p>
            <p>–¢–µ–ø–µ—Ä—å —É –≤–∞—Å –µ—Å—Ç—å –¥–æ—Å—Ç—É–ø –∫–æ –≤—Å–µ–º –º–∞—Ç–µ—Ä–∏–∞–ª–∞–º –∫—É—Ä—Å–∞.</p>
            <p>–£–¥–∞—á–Ω–æ–≥–æ –æ–±—É—á–µ–Ω–∏—è! üìö</p>
        `;

        await this.sendEmail(email, subject, html);
    }

    async sendSubscriptionCancellationNotification(
        email: string,
        name: string,
        reason: string,
        immediate: boolean
    ): Promise<void> {
        const subject = '–ü–æ–¥–ø–∏—Å–∫–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞';
        const html = `
            <h2>–ü–æ–¥–ø–∏—Å–∫–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞</h2>
            <p>–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, ${name}!</p>
            <p>–í–∞—à–∞ –ø–æ–¥–ø–∏—Å–∫–∞ –±—ã–ª–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞.</p>
            <p><strong>–ü—Ä–∏—á–∏–Ω–∞:</strong> ${reason}</p>
            <p>–î–æ—Å—Ç—É–ø –∫ –º–∞—Ç–µ—Ä–∏–∞–ª–∞–º ${immediate ? '–ø—Ä–µ–∫—Ä–∞—â–µ–Ω –Ω–µ–º–µ–¥–ª–µ–Ω–Ω–æ' : '–±—É–¥–µ—Ç –ø—Ä–µ–∫—Ä–∞—â–µ–Ω –≤ –∫–æ–Ω—Ü–µ —Ç–µ–∫—É—â–µ–≥–æ –ø–µ—Ä–∏–æ–¥–∞'}.</p>
        `;

        await this.sendEmail(email, subject, html);
    }

    async sendSubscriptionExpirationNotification(email: string, name: string): Promise<void> {
        const subject = '–ü–æ–¥–ø–∏—Å–∫–∞ –∏—Å—Ç–µ–∫–ª–∞';
        const html = `
            <h2>–ü–æ–¥–ø–∏—Å–∫–∞ –∏—Å—Ç–µ–∫–ª–∞</h2>
            <p>–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, ${name}!</p>
            <p>–í–∞—à–∞ –ø–æ–¥–ø–∏—Å–∫–∞ –∏—Å—Ç–µ–∫–ª–∞.</p>
            <p>–î–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è –æ–±—É—á–µ–Ω–∏—è –ø—Ä–æ–¥–ª–∏—Ç–µ –ø–æ–¥–ø–∏—Å–∫—É –≤ –ª–∏—á–Ω–æ–º –∫–∞–±–∏–Ω–µ—Ç–µ.</p>
        `;

        await this.sendEmail(email, subject, html);
    }

    async sendSubscriptionExpiringNotification(email: string, name: string, endDate: Date): Promise<void> {
        const daysLeft = Math.ceil((endDate.getTime() - new Date().getTime()) / (1000 * 60 * 60 * 24));
        const subject = '–ü–æ–¥–ø–∏—Å–∫–∞ —Å–∫–æ—Ä–æ –∏—Å—Ç–µ—á–µ—Ç';
        const html = `
            <h2>–ü–æ–¥–ø–∏—Å–∫–∞ –∏—Å—Ç–µ–∫–∞–µ—Ç</h2>
            <p>–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, ${name}!</p>
            <p>–í–∞—à–∞ –ø–æ–¥–ø–∏—Å–∫–∞ –∏—Å—Ç–µ–∫–∞–µ—Ç —á–µ—Ä–µ–∑ ${daysLeft} ${daysLeft === 1 ? '–¥–µ–Ω—å' : '–¥–Ω–µ–π'}.</p>
            <p>–ü—Ä–æ–¥–ª–∏—Ç–µ –ø–æ–¥–ø–∏—Å–∫—É, —á—Ç–æ–±—ã –Ω–µ –ø–æ—Ç–µ—Ä—è—Ç—å –¥–æ—Å—Ç—É–ø –∫ –º–∞—Ç–µ—Ä–∏–∞–ª–∞–º.</p>
        `;

        await this.sendEmail(email, subject, html);
    }

    /**
 * –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ –ø–∏—Å—å–º–æ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —á–µ—Ä–µ–∑ Google
 */
    async sendWelcomeEmailForGoogleUser(email: string, name?: string): Promise<void> {
        const subject = '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —á–µ—Ä–µ–∑ Google';
        const html = `
        <h2>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –Ω–∞ –æ–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω—É—é –ø–ª–∞—Ç—Ñ–æ—Ä–º—É!</h2>
        <p>–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ${name ? `, ${name}` : ''}!</p>
        
        <div style="background-color: #e8f5e8; padding: 20px; border-radius: 8px; border-left: 4px solid #28a745; margin: 20px 0;">
            <h3 style="margin-top: 0; color: #28a745;">üéâ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!</h3>
            <p>–í—ã —É—Å–ø–µ—à–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª–∏—Å—å –Ω–∞ –Ω–∞—à–µ–π –ø–ª–∞—Ç—Ñ–æ—Ä–º–µ –∏—Å–ø–æ–ª—å–∑—É—è —Å–≤–æ–π Google –∞–∫–∫–∞—É–Ω—Ç.</p>
        </div>

        <div style="background-color: #d4edda; padding: 15px; border-radius: 8px; margin: 20px 0;">
            <h4 style="margin-top: 0; color: #155724;">‚úÖ –ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ —á–µ—Ä–µ–∑ Google:</h4>
            <ul style="color: #155724; margin: 10px 0 0 20px;">
                <li>–ë—ã—Å—Ç—Ä—ã–π –∏ –±–µ–∑–æ–ø–∞—Å–Ω—ã–π –≤—Ö–æ–¥ –±–µ–∑ –∑–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –ø–∞—Ä–æ–ª–µ–π</li>
                <li>–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –ø—Ä–æ—Ñ–∏–ª—è</li>
                <li>–í–∞—à email —É–∂–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω</li>
                <li>–ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å –Ω–∞ —É—Ä–æ–≤–Ω–µ Google</li>
            </ul>
        </div>

        <div style="background-color: #fff3cd; padding: 15px; border-radius: 8px; border-left: 4px solid #ffc107; margin: 20px 0;">
            <h4 style="margin-top: 0; color: #856404;">üìö –ß—Ç–æ –¥–∞–ª—å—à–µ?</h4>
            <ul style="color: #856404; margin: 10px 0 0 20px;">
                <li>–ò–∑—É—á–∏—Ç–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∫—É—Ä—Å—ã</li>
                <li>–ó–∞–ø–æ–ª–Ω–∏—Ç–µ —Å–≤–æ–π –ø—Ä–æ—Ñ–∏–ª—å</li>
                <li>–ù–∞—á–Ω–∏—Ç–µ –æ–±—É—á–µ–Ω–∏–µ</li>
                <li>–ü—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –º–æ–∂–µ—Ç–µ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π –ø–∞—Ä–æ–ª—å –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö</li>
            </ul>
        </div>

        <div style="text-align: center; margin: 30px 0;">
            <a href="${this.app_url || 'https://neuronest.pp.ua'}" 
               style="background-color: #007bff; color: white; padding: 12px 24px; text-decoration: none; border-radius: 5px; font-weight: bold;">
                –ü–µ—Ä–µ–π—Ç–∏ –∫ –æ–±—É—á–µ–Ω–∏—é
            </a>
        </div>

        <p style="margin-top: 30px;">
            <strong>–í–∞–∂–Ω–æ:</strong> –î–ª—è –≤—Ö–æ–¥–∞ –≤ —Å–∏—Å—Ç–µ–º—É –≤ –¥–∞–ª—å–Ω–µ–π—à–µ–º –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫—É "–í–æ–π—Ç–∏ —á–µ—Ä–µ–∑ Google" 
            –∏–ª–∏ –º–æ–∂–µ—Ç–µ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –æ–±—ã—á–Ω—ã–π –ø–∞—Ä–æ–ª—å –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö –ø—Ä–æ—Ñ–∏–ª—è.
        </p>
        
        <hr style="margin: 30px 0; border: none; border-top: 1px solid #eee;">
        <p style="color: #666; font-size: 12px;">
            –≠—Ç–æ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –ø–∏—Å—å–º–æ, –Ω–µ –æ—Ç–≤–µ—á–∞–π—Ç–µ –Ω–∞ –Ω–µ–≥–æ.<br>
            –ï—Å–ª–∏ —É –≤–∞—Å –≤–æ–∑–Ω–∏–∫–ª–∏ –≤–æ–ø—Ä–æ—Å—ã, –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ —Å–ª—É–∂–±—É –ø–æ–¥–¥–µ—Ä–∂–∫–∏.
        </p>
    `;

        await this.sendEmail(email, subject, html);
    }

    // –ë–∞–∑–æ–≤—ã–π –º–µ—Ç–æ–¥ –æ—Ç–ø—Ä–∞–≤–∫–∏ email (–µ—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç)
    private async sendEmail(to: string, subject: string, html: string): Promise<void> {
        try {
            if (!this.transporter) {
                console.warn('SMTP —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω. –ü–∏—Å—å–º–æ –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ.');
                console.debug(`TO: ${to}, SUBJECT: ${subject}`);
                return;
            }

            const info = await this.transporter.sendMail({
                from: `"–û–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω–∞—è –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞" <${this.emailUser}>`,
                to,
                subject,
                html
            });

            console.log(`Email –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω: ${info.messageId} -> ${to}`);
        } catch (error) {
            console.error(`–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ email: ${error.message}`, error.stack);
            throw error;
        }
    }

    /**
     * –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ —Å–≤—è–∑—ã–≤–∞–Ω–∏–∏ Google –∞–∫–∫–∞—É–Ω—Ç–∞ —Å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–º –ø—Ä–æ—Ñ–∏–ª–µ–º
     */
    async sendGoogleAccountLinkedNotification(email: string, name?: string): Promise<void> {
        const subject = 'Google –∞–∫–∫–∞—É–Ω—Ç —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–≤—è–∑–∞–Ω';
        const html = `
        <h2>Google –∞–∫–∫–∞—É–Ω—Ç –ø—Ä–∏–≤—è–∑–∞–Ω –∫ –≤–∞—à–µ–º—É –ø—Ä–æ—Ñ–∏–ª—é</h2>
        <p>–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ${name ? `, ${name}` : ''}!</p>
        
        <div style="background-color: #d4edda; padding: 20px; border-radius: 8px; border-left: 4px solid #28a745; margin: 20px 0;">
            <h3 style="margin-top: 0; color: #28a745;">üîó –°–≤—è–∑—ã–≤–∞–Ω–∏–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!</h3>
            <p>–í–∞—à Google –∞–∫–∫–∞—É–Ω—Ç —Ç–µ–ø–µ—Ä—å –ø—Ä–∏–≤—è–∑–∞–Ω –∫ –ø—Ä–æ—Ñ–∏–ª—é –Ω–∞ –Ω–∞—à–µ–π –ø–ª–∞—Ç—Ñ–æ—Ä–º–µ.</p>
        </div>

        <p><strong>–¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ:</strong></p>
        <ul>
            <li>–í—Ö–æ–¥–∏—Ç—å –≤ —Å–∏—Å—Ç–µ–º—É —á–µ—Ä–µ–∑ Google –æ–¥–Ω–∏–º –∫–ª–∏–∫–æ–º</li>
            <li>–ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–∞–∫ Google –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é, —Ç–∞–∫ –∏ –æ–±—ã—á–Ω—ã–π –ø–∞—Ä–æ–ª—å</li>
            <li>–°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞—Ç—å –¥–∞–Ω–Ω—ã–µ –ø—Ä–æ—Ñ–∏–ª—è —Å Google</li>
        </ul>

        <p><strong>–ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å:</strong> –ï—Å–ª–∏ —ç—Ç–æ –±—ã–ª–∏ –Ω–µ –≤—ã, –Ω–µ–º–µ–¥–ª–µ–Ω–Ω–æ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ —Å–ª—É–∂–±—É –ø–æ–¥–¥–µ—Ä–∂–∫–∏ 
        –∏ –∏–∑–º–µ–Ω–∏—Ç–µ –ø–∞—Ä–æ–ª—å –≤–∞—à–µ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞.</p>
        
        <hr style="margin: 30px 0; border: none; border-top: 1px solid #eee;">
        <p style="color: #666; font-size: 12px;">
            –≠—Ç–æ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –ø–∏—Å—å–º–æ, –Ω–µ –æ—Ç–≤–µ—á–∞–π—Ç–µ –Ω–∞ –Ω–µ–≥–æ.
        </p>
    `;

        await this.sendEmail(email, subject, html);
    }

    /**
     * –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± –æ—Ç–≤—è–∑–∫–µ Google –∞–∫–∫–∞—É–Ω—Ç–∞
     */
    async sendGoogleAccountUnlinkedNotification(email: string, name?: string): Promise<void> {
        const subject = 'Google –∞–∫–∫–∞—É–Ω—Ç –æ—Ç–≤—è–∑–∞–Ω –æ—Ç –ø—Ä–æ—Ñ–∏–ª—è';
        const html = `
        <h2>Google –∞–∫–∫–∞—É–Ω—Ç –æ—Ç–≤—è–∑–∞–Ω</h2>
        <p>–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ${name ? `, ${name}` : ''}!</p>
        
        <div style="background-color: #fff3cd; padding: 20px; border-radius: 8px; border-left: 4px solid #ffc107; margin: 20px 0;">
            <h3 style="margin-top: 0; color: #856404;">üîì Google –∞–∫–∫–∞—É–Ω—Ç –æ—Ç–≤—è–∑–∞–Ω</h3>
            <p>–í–∞—à Google –∞–∫–∫–∞—É–Ω—Ç –±–æ–ª—å—à–µ –Ω–µ –ø—Ä–∏–≤—è–∑–∞–Ω –∫ –ø—Ä–æ—Ñ–∏–ª—é –Ω–∞ –Ω–∞—à–µ–π –ø–ª–∞—Ç—Ñ–æ—Ä–º–µ.</p>
        </div>

        <p><strong>–ß—Ç–æ –∏–∑–º–µ–Ω–∏–ª–æ—Å—å:</strong></p>
        <ul>
            <li>–í—Ö–æ–¥ —á–µ—Ä–µ–∑ Google –±–æ–ª—å—à–µ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω</li>
            <li>–î–ª—è –≤—Ö–æ–¥–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ email –∏ –ø–∞—Ä–æ–ª—å</li>
            <li>–í—Å–µ –≤–∞—à–∏ –∫—É—Ä—Å—ã –∏ –ø—Ä–æ–≥—Ä–µ—Å—Å —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã</li>
        </ul>

        <p><strong>–ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å:</strong> –ï—Å–ª–∏ —ç—Ç–æ –±—ã–ª–∏ –Ω–µ –≤—ã, –Ω–µ–º–µ–¥–ª–µ–Ω–Ω–æ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ —Å–ª—É–∂–±—É –ø–æ–¥–¥–µ—Ä–∂–∫–∏.</p>
        
        <hr style="margin: 30px 0; border: none; border-top: 1px solid #eee;">
        <p style="color: #666; font-size: 12px;">
            –≠—Ç–æ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –ø–∏—Å—å–º–æ, –Ω–µ –æ—Ç–≤–µ—á–∞–π—Ç–µ –Ω–∞ –Ω–µ–≥–æ.
        </p>
    `;

        await this.sendEmail(email, subject, html);
    }

}