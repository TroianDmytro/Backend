// src/subscription-plans/dto/subscription-plan.dto.ts
import {
    IsNotEmpty,
    IsString,
    IsNumber,
    IsEnum,
    IsOptional,
    IsBoolean,
    IsArray,
    Min,
    Max,
    ArrayNotEmpty
} from 'class-validator';
import { ApiProperty } from '@nestjs/swagger';

export class CreatePlanDto {
    @ApiProperty({
        example: '–ü—Ä–µ–º–∏—É–º 3 –º–µ—Å—è—Ü–∞',
        description: '–ù–∞–∑–≤–∞–Ω–∏–µ —Ç–∞—Ä–∏—Ñ–Ω–æ–≥–æ –ø–ª–∞–Ω–∞'
    })
    @IsString()
    @IsNotEmpty()
    name: string;

    @ApiProperty({
        example: 'premium-3-months',
        description: 'URL-–¥—Ä—É–∂–µ–ª—é–±–Ω—ã–π –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä (slug). –î–æ–ª–∂–µ–Ω –±—ã—Ç—å —É–Ω–∏–∫–∞–ª—å–Ω—ã–º.'
    })
    @IsString()
    @IsNotEmpty()
    slug: string;

    @ApiProperty({
        example: '–û–ø—Ç–∏–º–∞–ª—å–Ω—ã–π –ø–ª–∞–Ω –¥–ª—è —Å–µ—Ä—å–µ–∑–Ω–æ–≥–æ –æ–±—É—á–µ–Ω–∏—è –Ω–∞ 3 –º–µ—Å—è—Ü–∞',
        description: '–ü–æ–¥—Ä–æ–±–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ —Ç–∞—Ä–∏—Ñ–Ω–æ–≥–æ –ø–ª–∞–Ω–∞'
    })
    @IsString()
    @IsNotEmpty()
    description: string;

    @ApiProperty({
        example: '3_months',
        description: '–¢–∏–ø –ø–µ—Ä–∏–æ–¥–∞ –ø–æ–¥–ø–∏—Å–∫–∏',
        enum: ['1_month', '3_months', '6_months', '12_months']
    })
    @IsEnum(['1_month', '3_months', '6_months', '12_months'])
    @IsNotEmpty()
    period_type: '1_month' | '3_months' | '6_months' | '12_months';

    @ApiProperty({
        example: 1000,
        description: '–¶–µ–Ω–∞ —Ç–∞—Ä–∏—Ñ–Ω–æ–≥–æ –ø–ª–∞–Ω–∞ –≤ —É–∫–∞–∑–∞–Ω–Ω–æ–π –≤–∞–ª—é—Ç–µ'
    })
    @IsNumber()
    @Min(0)
    price: number;

    @ApiProperty({
        example: 'UAH',
        description: '–í–∞–ª—é—Ç–∞ —Ç–∞—Ä–∏—Ñ–Ω–æ–≥–æ –ø–ª–∞–Ω–∞',
        enum: ['UAH', 'USD', 'EUR'],
        default: 'UAH'
    })
    @IsEnum(['UAH', 'USD', 'EUR'])
    @IsOptional()
    currency: string = 'UAH';

    @ApiProperty({
        example: 33,
        description: '–ü—Ä–æ—Ü–µ–Ω—Ç —Å–∫–∏–¥–∫–∏ (0-100)',
        required: false
    })
    @IsNumber()
    @Min(0)
    @Max(100)
    @IsOptional()
    discount_percent?: number;

    @ApiProperty({
        example: 1500,
        description: '–û—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–∞—è —Ü–µ–Ω–∞ –¥–æ —Å–∫–∏–¥–∫–∏ (–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –µ—Å–ª–∏ –µ—Å—Ç—å —Å–∫–∏–¥–∫–∞)',
        required: false
    })
    @IsNumber()
    @Min(0)
    @IsOptional()
    original_price?: number;

    @ApiProperty({
        example: false,
        description: '–ü–æ–ø—É–ª—è—Ä–Ω—ã–π –ø–ª–∞–Ω (–¥–ª—è –≤—ã–¥–µ–ª–µ–Ω–∏—è –≤ UI)',
        default: false
    })
    @IsBoolean()
    @IsOptional()
    is_popular?: boolean = false;

    @ApiProperty({
        example: false,
        description: '–†–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–π –ø–ª–∞–Ω',
        default: false
    })
    @IsBoolean()
    @IsOptional()
    is_featured?: boolean = false;

    @ApiProperty({
        example: [
            '–î–æ—Å—Ç—É–ø –∫–æ –≤—Å–µ–º –∫—É—Ä—Å–∞–º',
            '–ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞',
            '–°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã –æ–± –æ–∫–æ–Ω—á–∞–Ω–∏–∏'
        ],
        description: '–°–ø–∏—Å–æ–∫ –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–µ–π –ø–ª–∞–Ω–∞',
        type: [String],
        required: false
    })
    @IsArray()
    @IsString({ each: true })
    @IsOptional()
    features?: string[] = [];

    @ApiProperty({
        example: [
            '–≠–∫–æ–Ω–æ–º–∏—è 500 –≥—Ä–Ω',
            '–î–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –≤—Ä–µ–º–µ–Ω–∏ –¥–ª—è –∏–∑—É—á–µ–Ω–∏—è',
            '–ü–æ–ø—É–ª—è—Ä–Ω—ã–π –≤—ã–±–æ—Ä —Å—Ç—É–¥–µ–Ω—Ç–æ–≤'
        ],
        description: '–°–ø–∏—Å–æ–∫ –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤ –ø–ª–∞–Ω–∞',
        type: [String],
        required: false
    })
    @IsArray()
    @IsString({ each: true })
    @IsOptional()
    benefits?: string[] = [];

    @ApiProperty({
        example: '#51CF66',
        description: '–¶–≤–µ—Ç –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ UI (HEX —Ñ–æ—Ä–º–∞—Ç)',
        required: false
    })
    @IsString()
    @IsOptional()
    color?: string;

    @ApiProperty({
        example: 'üéØ',
        description: '–≠–º–æ–¥–∑–∏-–∏–∫–æ–Ω–∫–∞ –ø–ª–∞–Ω–∞',
        required: false
    })
    @IsString()
    @IsOptional()
    icon?: string;

    @ApiProperty({
        example: 2,
        description: '–ü–æ—Ä—è–¥–æ–∫ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏ (—á–µ–º –º–µ–Ω—å—à–µ —á–∏—Å–ª–æ, —Ç–µ–º –≤—ã—à–µ –≤ —Å–ø–∏—Å–∫–µ)',
        default: 0
    })
    @IsNumber()
    @IsOptional()
    sort_order?: number = 0;

    @ApiProperty({
        example: true,
        description: '–ê–∫—Ç–∏–≤–µ–Ω –ª–∏ –ø–ª–∞–Ω',
        default: true
    })
    @IsBoolean()
    @IsOptional()
    is_active?: boolean = true;
}

export class UpdatePlanDto {
    @ApiProperty({
        example: '–ü—Ä–µ–º–∏—É–º 3 –º–µ—Å—è—Ü–∞ (–æ–±–Ω–æ–≤–ª–µ–Ω)',
        description: '–ù–∞–∑–≤–∞–Ω–∏–µ —Ç–∞—Ä–∏—Ñ–Ω–æ–≥–æ –ø–ª–∞–Ω–∞',
        required: false
    })
    @IsString()
    @IsOptional()
    name?: string;

    @ApiProperty({
        example: 'premium-3-months-updated',
        description: 'URL-–¥—Ä—É–∂–µ–ª—é–±–Ω—ã–π –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä (slug)',
        required: false
    })
    @IsString()
    @IsOptional()
    slug?: string;

    @ApiProperty({
        example: '–û–±–Ω–æ–≤–ª–µ–Ω–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–µ–º–∏—É–º –ø–ª–∞–Ω–∞',
        description: '–û–ø–∏—Å–∞–Ω–∏–µ —Ç–∞—Ä–∏—Ñ–Ω–æ–≥–æ –ø–ª–∞–Ω–∞',
        required: false
    })
    @IsString()
    @IsOptional()
    description?: string;

    @ApiProperty({
        example: '6_months',
        description: '–¢–∏–ø –ø–µ—Ä–∏–æ–¥–∞ –ø–æ–¥–ø–∏—Å–∫–∏',
        enum: ['1_month', '3_months', '6_months', '12_months'],
        required: false
    })
    @IsEnum(['1_month', '3_months', '6_months', '12_months'])
    @IsOptional()
    period_type?: '1_month' | '3_months' | '6_months' | '12_months';

    @ApiProperty({
        example: 1200,
        description: '–ù–æ–≤–∞—è —Ü–µ–Ω–∞ —Ç–∞—Ä–∏—Ñ–Ω–æ–≥–æ –ø–ª–∞–Ω–∞',
        required: false
    })
    @IsNumber()
    @Min(0)
    @IsOptional()
    price?: number;

    @ApiProperty({
        example: 'USD',
        description: '–í–∞–ª—é—Ç–∞ —Ç–∞—Ä–∏—Ñ–Ω–æ–≥–æ –ø–ª–∞–Ω–∞',
        enum: ['UAH', 'USD', 'EUR'],
        required: false
    })
    @IsEnum(['UAH', 'USD', 'EUR'])
    @IsOptional()
    currency?: string;

    @ApiProperty({
        example: 25,
        description: '–ü—Ä–æ—Ü–µ–Ω—Ç —Å–∫–∏–¥–∫–∏ (0-100)',
        required: false
    })
    @IsNumber()
    @Min(0)
    @Max(100)
    @IsOptional()
    discount_percent?: number;

    @ApiProperty({
        example: 1600,
        description: '–û—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–∞—è —Ü–µ–Ω–∞ –¥–æ —Å–∫–∏–¥–∫–∏',
        required: false
    })
    @IsNumber()
    @Min(0)
    @IsOptional()
    original_price?: number;

    @ApiProperty({
        example: true,
        description: '–ü–æ–ø—É–ª—è—Ä–Ω—ã–π –ø–ª–∞–Ω',
        required: false
    })
    @IsBoolean()
    @IsOptional()
    is_popular?: boolean;

    @ApiProperty({
        example: true,
        description: '–†–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–π –ø–ª–∞–Ω',
        required: false
    })
    @IsBoolean()
    @IsOptional()
    is_featured?: boolean;

    @ApiProperty({
        example: [
            '–î–æ—Å—Ç—É–ø –∫–æ –≤—Å–µ–º –∫—É—Ä—Å–∞–º',
            'VIP –ø–æ–¥–¥–µ—Ä–∂–∫–∞ 24/7',
            '–ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–µ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏'
        ],
        description: '–û–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫ –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–µ–π',
        type: [String],
        required: false
    })
    @IsArray()
    @IsString({ each: true })
    @IsOptional()
    features?: string[];

    @ApiProperty({
        example: [
            '–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —ç–∫–æ–Ω–æ–º–∏—è',
            '–ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –ø–æ–¥—Ö–æ–¥',
            '–õ—É—á—à–∏–π –≤—ã–±–æ—Ä –¥–ª—è –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª–æ–≤'
        ],
        description: '–û–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫ –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤',
        type: [String],
        required: false
    })
    @IsArray()
    @IsString({ each: true })
    @IsOptional()
    benefits?: string[];

    @ApiProperty({
        example: '#9775FA',
        description: '–ù–æ–≤—ã–π —Ü–≤–µ—Ç –ø–ª–∞–Ω–∞',
        required: false
    })
    @IsString()
    @IsOptional()
    color?: string;

    @ApiProperty({
        example: 'üëë',
        description: '–ù–æ–≤–∞—è –∏–∫–æ–Ω–∫–∞ –ø–ª–∞–Ω–∞',
        required: false
    })
    @IsString()
    @IsOptional()
    icon?: string;

    @ApiProperty({
        example: 1,
        description: '–ù–æ–≤—ã–π –ø–æ—Ä—è–¥–æ–∫ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏',
        required: false
    })
    @IsNumber()
    @IsOptional()
    sort_order?: number;

    @ApiProperty({
        example: false,
        description: '–°—Ç–∞—Ç—É—Å –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –ø–ª–∞–Ω–∞',
        required: false
    })
    @IsBoolean()
    @IsOptional()
    is_active?: boolean;
}